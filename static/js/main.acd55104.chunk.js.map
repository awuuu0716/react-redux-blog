{"version":3,"sources":["utils.js","WebAPI.js","redux/blogSlice.js","components/Header/Header.js","pages/LoginPage/LoginPage.js","pages/SignUpPage/SignUpPage.js","pages/HomePage/HomePage.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","pages/AboutPage/AboutPage.js","pages/EditPostPage/EditPostPage.js","components/App/App.js","app/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","then","res","json","blogSlice","createSlice","name","initialState","posts","paginate","userData","isLodingUser","loginResponse","errorMessage","post","reducers","setPosts","state","action","payload","setPost","setPaginate","setUser","setIsLodingUser","setErrorMessage","setLoginResponse","actions","getPosts","page","dispatch","getPaginatePosts","cloneResponse","clone","totalPages","Math","ceil","get","tempArr","i","push","createPaginateArr","getPost","id","getPostAPI","deletePost","method","deletePostAPI","login","username","password","body","JSON","stringify","loginAPI","data","ok","toString","message","signUp","nickname","signUpAPI","newPost","title","content","newPostAPI","editPost","editPostAPI","selectPosts","blog","selectPost","selectPaginate","selectUser","selectIsLodingUser","selectErrorMessage","HeaderContainer","styled","div","Brand","Link","NavbarList","Nav","props","$active","LeftContainer","Header","user","useSelector","pathname","useLocation","history","useHistory","useDispatch","to","onClick","ErrorMessage","Form","form","LoginPage","useState","setUsername","setPassword","isSubmit","useRef","useEffect","onSubmit","e","preventDefault","current","value","onChange","target","required","type","SignUpPage","setNickname","Root","PostContainer","PostTitle","PostDate","PaginateContainer","ul","Paginate","li","Post","createdAt","Date","toLocaleString","HomePage","length","map","handlePaginate","TitleContainer","PostBody","Button","button","Title","h1","PostPage","useParams","handleDelete","handleEdit","InputContainer","InputTitle","input","InputStory","textarea","SubmitButton","NewPostPage","setTitle","setContent","placeholder","rows","AboutTitle","AboutBody","AboutPage","App","exact","path","configureStore","reducer","blogReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.acd55104.chunk.js","sourcesContent":["const TOKEN_NAME = 'token';\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\r\n\r\nexport const createPaginateArr = (totalPages) => {\r\n  const tempArr = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    tempArr.push(i);\r\n  }\r\n  return tempArr;\r\n};\r\n","import { getAuthToken } from './utils';\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me';\r\n\r\nexport const getPaginatePosts = (page) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_page=${page}&_limit=5&_sort=id&_order=desc`\r\n  ).then((res) => res);\r\n};\r\n\r\nexport const getPost = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\r\n};\r\n\r\nexport const login = (username, password) =>\r\n  fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n\r\nexport const deletePost = (id) =>\r\n  fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n  }).then((res) => res.json());\r\n\r\nexport const signUp = ({ username, password, nickname }) =>\r\n  fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n\r\nexport const getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const newPost = (title, body) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const editPost = (title, body, id) => {\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  getPaginatePosts,\r\n  getMe,\r\n  login as loginAPI,\r\n  newPost as newPostAPI,\r\n  getPost as getPostAPI,\r\n  deletePost as deletePostAPI,\r\n  editPost as editPostAPI,\r\n  signUp as signUpAPI,\r\n} from '../WebAPI';\r\nimport { createPaginateArr, setAuthToken } from '../utils';\r\n\r\nexport const blogSlice = createSlice({\r\n  name: 'blog',\r\n  initialState: {\r\n    posts: [],\r\n    paginate: [],\r\n    userData: null,\r\n    isLodingUser: false,\r\n    loginResponse: null,\r\n    errorMessage: '',\r\n    post: null,\r\n  },\r\n  reducers: {\r\n    setPosts: (state, action) => {\r\n      state.posts = action.payload;\r\n    },\r\n    setPost: (state, action) => {\r\n      state.post = action.payload;\r\n    },\r\n    setPaginate: (state, action) => {\r\n      state.paginate = action.payload;\r\n    },\r\n    setUser: (state, action) => {\r\n      state.userData = action.payload;\r\n    },\r\n    setIsLodingUser: (state, action) => {\r\n      state.isLodingUser = action.payload;\r\n    },\r\n    setErrorMessage: (state, action) => {\r\n      state.errorMessage = action.payload;\r\n    },\r\n    setLoginResponse: (state, action) => {\r\n      state.errorMessage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setPosts,\r\n  setPaginate,\r\n  setUser,\r\n  setIsLodingUser,\r\n  setErrorMessage,\r\n  setLoginResponse,\r\n  setPost,\r\n} = blogSlice.actions;\r\n\r\nexport const getPosts = (page) => (dispatch) => {\r\n  getPaginatePosts(page)\r\n    .then((res) => {\r\n      const cloneResponse = res.clone();\r\n      const totalPages = Math.ceil(\r\n        cloneResponse.headers.get('x-total-count') / 5\r\n      );\r\n      dispatch(setPaginate(createPaginateArr(totalPages)));\r\n      return res.json();\r\n    })\r\n    .then((posts) => {\r\n      dispatch(setPosts(posts));\r\n    });\r\n};\r\n\r\nexport const getPost = (id) => (dispatch) => {\r\n  return getPostAPI(id).then((post) => {\r\n    dispatch(setPost(post[0]));\r\n    return post;\r\n  });\r\n};\r\n\r\nexport const deletePost = (id) => (dispatch) => {\r\n  return deletePostAPI(id).then((res) => res);\r\n};\r\n\r\nexport const getUser = () => (dispatch) => {\r\n  getMe().then((res) => {\r\n    if (res.ok) dispatch(setUser(res.data));\r\n    dispatch(setIsLodingUser(false));\r\n  });\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  dispatch(setErrorMessage(''));\r\n  return loginAPI(username, password).then((data) => {\r\n    if (data.ok === 0) {\r\n      dispatch(setErrorMessage(data.message));\r\n      return;\r\n    }\r\n    setAuthToken(data.token);\r\n    return getMe().then((res) => {\r\n      if (res.ok !== 1) {\r\n        dispatch(setErrorMessage(res.toString()));\r\n        return;\r\n      }\r\n      dispatch(setUser(res.data));\r\n      return res;\r\n    });\r\n  });\r\n};\r\n\r\nexport const signUp = ({username, password, nickname}) => (dispatch) => {\r\n  dispatch(setErrorMessage(''));\r\n  return signUpAPI({username, password, nickname}).then((data) => {\r\n    if (data.ok === 0) {\r\n      dispatch(setErrorMessage(data.message));\r\n      return;\r\n    }\r\n    setAuthToken(data.token);\r\n    return getMe().then((res) => {\r\n      if (res.ok !== 1) {\r\n        dispatch(setErrorMessage(res.toString()));\r\n        return;\r\n      }\r\n      dispatch(setUser(res.data));\r\n      return res;\r\n    });\r\n  });\r\n};\r\n\r\nexport const newPost = (title, content) => (dispatch) => {\r\n  return newPostAPI(title, content).then((res) => {\r\n    if (res.ok === 0) {\r\n      dispatch(setErrorMessage(res.message));\r\n      return;\r\n    }\r\n    return res;\r\n  });\r\n};\r\n\r\nexport const editPost = (title, content, id) => (dispatch) => {\r\n  return editPostAPI(title, content, id).then((res) => {\r\n    if (res.ok === 0) {\r\n      dispatch(setErrorMessage(res.message));\r\n      return;\r\n    }\r\n    return res;\r\n  });\r\n};\r\n\r\nexport const selectPosts = (state) => state.blog.posts;\r\nexport const selectPost = (state) => state.blog.post;\r\nexport const selectPaginate = (state) => state.blog.paginate;\r\nexport const selectUser = (state) => state.blog.userData;\r\nexport const selectIsLodingUser = (state) => state.blog.isLodingUser;\r\nexport const selectErrorMessage = (state) => state.blog.errorMessage;\r\n\r\nexport default blogSlice.reducer;\r\n","import { Link, useLocation, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { setAuthToken } from '../../utils';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectUser, setUser, selectIsLodingUser } from '../../redux/blogSlice';\r\n\r\nconst HeaderContainer = styled.div`\r\n  height: 64px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n  padding: 0 32px;\r\n  background: white;\r\n`;\r\n\r\nconst Brand = styled(Link)`\r\n  color: black;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst NavbarList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 64px;\r\n`;\r\n\r\nconst Nav = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n\r\n  ${(props) => props.$active && 'background: rgba(0,0,0,0.1)'}\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${NavbarList} {\r\n    margin-left: 16px;\r\n  }\r\n`;\r\n\r\nexport default function Header() {\r\n  const user = useSelector(selectUser);\r\n  // 加 isLodingUser 的用意是為了不讓有登入過的使用者看到畫面閃一下 login 與 sign up\r\n  // 閃一下也沒差的話應該可以拔掉這個 state\r\n  const isLodingUser = useSelector(selectIsLodingUser);\r\n  const pathname = useLocation().pathname;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    setAuthToken('');\r\n    dispatch(setUser(null));\r\n    if (pathname !== '/') history.push('/');\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <LeftContainer>\r\n        <Brand to=\"/\">Blog</Brand>\r\n        <NavbarList>\r\n          <Nav to=\"/\" $active={pathname === '/'}>\r\n            HomePage\r\n          </Nav>\r\n          <Nav to=\"/about\" $active={pathname === '/about'}>\r\n            About\r\n          </Nav>\r\n          {!isLodingUser && user && (\r\n            <Nav to=\"/new-post\" $active={pathname === '/new-post'}>\r\n              New Post\r\n            </Nav>\r\n          )}\r\n        </NavbarList>\r\n      </LeftContainer>\r\n      <NavbarList>\r\n        {!isLodingUser && !user && (\r\n          <Nav to=\"/login\" $active={pathname === '/login'}>\r\n            Log in\r\n          </Nav>\r\n        )}\r\n        {!isLodingUser && !user && (\r\n          <Nav to=\"/sign-up\" $active={pathname === '/sign-up'}>\r\n            Sign up\r\n          </Nav>\r\n        )}\r\n        {!isLodingUser && user && (\r\n          <Nav to=\"/\" onClick={handleLogout}>\r\n            log out\r\n          </Nav>\r\n        )}\r\n      </NavbarList>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  selectErrorMessage,\r\n  login,\r\n  setErrorMessage,\r\n} from '../../redux/blogSlice';\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 500px;\r\n  height: 120px;\r\n  padding: 20px;\r\n  margin: 100px auto;\r\n  border: 1px solid #fbfbfb;\r\n  box-shadow: 1px 1px 3px #fbfbfb;\r\n`;\r\n\r\nexport default function LoginPage() {\r\n  const errorMessage = useSelector(selectErrorMessage);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isSubmit = useRef(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isSubmit.current) return;\r\n    isSubmit.current = true;\r\n    dispatch(login(username, password)).then((res) => {\r\n      isSubmit.current = false;\r\n      if (res) history.push('/');\r\n    });\r\n  };\r\n\r\n  useEffect(() => () => dispatch(setErrorMessage('')), [dispatch]);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <div>\r\n        username:\r\n        <input\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        password:\r\n        <input\r\n          value={password}\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Log in</button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </Form>\r\n  );\r\n}\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  signUp,\r\n  selectErrorMessage,\r\n  setErrorMessage,\r\n} from '../../redux/blogSlice';\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 500px;\r\n  height: 120px;\r\n  padding: 20px;\r\n  margin: 100px auto;\r\n  border: 1px solid #fbfbfb;\r\n  box-shadow: 1px 1px 3px #fbfbfb;\r\n`;\r\n\r\nexport default function SignUpPage() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [nickname, setNickname] = useState('');\r\n  const errorMessage = useSelector(selectErrorMessage);\r\n  const isSubmit = useRef(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isSubmit.current) return;\r\n    isSubmit.current = true;\r\n    dispatch(signUp({username, password, nickname})).then((res) => {\r\n      isSubmit.current = false;\r\n      if (res) history.push('/');\r\n    });\r\n  };\r\n\r\n  useEffect(() => () => dispatch(setErrorMessage('')), [dispatch]);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <div>\r\n        nickname:\r\n        <input\r\n          value={nickname}\r\n          onChange={(e) => setNickname(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        username:\r\n        <input\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        password:\r\n        <input\r\n          value={password}\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\">Sign Up</button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </Form>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectPosts, selectPaginate, getPosts } from '../../redux/blogSlice';\r\n\r\nconst Root = styled.div`\r\n  width: 40%;\r\n  margin: 0 auto;\r\n`;\r\nconst PostContainer = styled.div`\r\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\r\n  padding: 16px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n\r\n  &:hover {\r\n    background: rgba(200, 200, 200, 0.1);\r\n  }\r\n`;\r\nconst PostTitle = styled(Link)`\r\n  max-width: 500px;\r\n  font-size: 24px;\r\n  color: #333;\r\n  text-decoration: none;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PaginateContainer = styled.ul`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0;\r\n`;\r\n\r\nconst Paginate = styled.li`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 25px;\r\n  height: 25px;\r\n  margin: 0 10px;\r\n  border: 1px solid #fbfbfb;\r\n  border-radius: 3px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  &:hover {\r\n    background: rgba(200, 200, 200, 0.1);\r\n  }\r\n`;\r\n\r\nfunction Post({ post }) {\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\r\n      <PostDate>\r\n        {post.createdAt && new Date(post.createdAt).toLocaleString()}\r\n      </PostDate>\r\n    </PostContainer>\r\n  );\r\n}\r\n\r\nexport default function HomePage() {\r\n  const posts = useSelector(selectPosts);\r\n  const paginate = useSelector(selectPaginate);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(getPosts(1)), [dispatch]);\r\n\r\n  const handlePaginate = (page) => dispatch(getPosts(page));\r\n\r\n  return (\r\n    <Root>\r\n      {posts.length > 0 ? (\r\n        posts.map((post) => <Post post={post} key={post.id} />)\r\n      ) : (\r\n        <Post post={{ title: 'Loading...' }} />\r\n      )}\r\n      <PaginateContainer>\r\n        {posts.length > 0 &&\r\n          paginate.map((page) => (\r\n            <Paginate onClick={() => handlePaginate(page)} key={page}>\r\n              {page}\r\n            </Paginate>\r\n          ))}\r\n      </PaginateContainer>\r\n    </Root>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  selectPost,\r\n  getPost,\r\n  setPost,\r\n  deletePost,\r\n  selectUser,\r\n} from '../../redux/blogSlice';\r\n\r\nconst Root = styled.div`\r\n  width: 40%;\r\n  margin: 0 auto;\r\n  padding-top: 50px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.8);\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst PostBody = styled.div`\r\n  font-size: 24px;\r\n  color: #333;\r\n  max-width: 600px;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 20px;\r\n  border: 1px solid #333;\r\n  border-radius: 3px;\r\n  background: white;\r\n  color: #333;\r\n  cursor: pointer;\r\n  transition: all 0.1s ease-in-out;\r\n\r\n  &:hover {\r\n    background: red;\r\n    color: white;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 10px;\r\n\r\n    &:hover {\r\n      background: green;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 32px;\r\n  max-width: 600px;\r\n  color: #333;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nexport default function PostPage() {\r\n  const user = useSelector(selectUser);\r\n  const post = useSelector(selectPost);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(id));\r\n    return () => dispatch(setPost(null));\r\n  }, [dispatch, id]);\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deletePost(id)).then(() => history.push('/'));\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    history.push(`/edit/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <div>\r\n        <TitleContainer>\r\n          <Title>{post && post.title}</Title>\r\n          {user && (\r\n            <div>\r\n              <Button onClick={() => handleDelete(id)}>Delete</Button>\r\n              <Button onClick={() => handleEdit(id)}>Edit</Button>\r\n            </div>\r\n          )}\r\n        </TitleContainer>\r\n        <PostDate>{post && new Date(post.createdAt).toLocaleString()}</PostDate>\r\n        <PostBody>{post && post.body}</PostBody>\r\n      </div>\r\n    </Root>\r\n  );\r\n}\r\n","import { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newPost, selectErrorMessage } from '../../redux/blogSlice';\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  width: 800px;\r\n  padding: 20px;\r\n  margin: 60px auto;\r\n  border: 1px solid #fbfbfb;\r\n  box-shadow: 1px 1px 3px #fbfbfb;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst InputTitle = styled.input`\r\n  border: none;\r\n  font-size: 40px;\r\n  font-weight: bold;\r\n  outline: none;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n  border-bottom: 2px solid rgba(0, 0, 0, 0);\r\n  transition: border 0.2s ease-in-out;\r\n\r\n  &:focus {\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nconst InputStory = styled.textarea`\r\n  width: 100%;\r\n  border: none;\r\n  font-size: 24px;\r\n  outline: none;\r\n  resize: none;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  width: 80px;\r\n  height: 35px;\r\n  border: none;\r\n  outline: none;\r\n  background: rgb(26, 137, 23);\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n\r\n  &:hover {\r\n    background: rgb(12, 110, 15);\r\n  }\r\n`;\r\n\r\nexport default function NewPostPage() {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const errorMessage = useSelector(selectErrorMessage);\r\n  const history = useHistory();\r\n  const isSubmit = useRef(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isSubmit.current) return;\r\n    isSubmit.current = true;\r\n    dispatch(newPost(title, content)).then((res) => {\r\n      isSubmit.current = false;\r\n      if (res) history.push('/');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <InputContainer>\r\n        <InputTitle\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n      </InputContainer>\r\n      <InputContainer>\r\n        <InputStory\r\n          rows=\"10\"\r\n          placeholder=\"Tell your story...\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          required\r\n        />\r\n      </InputContainer>\r\n      <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </Form>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Root = styled.div`\r\n  width: 40%;\r\n  margin: 0 auto;\r\n  padding-top: 50px;\r\n`;\r\n\r\nconst AboutTitle = styled.div`\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #333;\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst AboutBody = styled.div`\r\n  font-size: 24px;\r\n  color: #333;\r\n`;\r\n\r\nexport default function AboutPage() {\r\n  return (\r\n    <Root>\r\n      <div>\r\n        <AboutTitle>About This Blog</AboutTitle>\r\n        <AboutBody>\r\n          A blog that made up with React, still practing T_T.\r\n        </AboutBody>\r\n      </div>\r\n    </Root>\r\n  );\r\n}\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  editPost,\r\n  selectErrorMessage,\r\n  getPost,\r\n  setPost,\r\n} from '../../redux/blogSlice';\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  width: 800px;\r\n  padding: 20px;\r\n  margin: 60px auto;\r\n  border: 1px solid #fbfbfb;\r\n  box-shadow: 1px 1px 3px #fbfbfb;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst InputTitle = styled.input`\r\n  border: none;\r\n  font-size: 40px;\r\n  font-weight: bold;\r\n  outline: none;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n  border-bottom: 2px solid rgba(0, 0, 0, 0);\r\n  transition: border 0.2s ease-in-out;\r\n\r\n  &:focus {\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nconst InputStory = styled.textarea`\r\n  width: 100%;\r\n  border: none;\r\n  font-size: 24px;\r\n  outline: none;\r\n  resize: none;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  width: 80px;\r\n  height: 35px;\r\n  border: none;\r\n  outline: none;\r\n  background: rgb(26, 137, 23);\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n\r\n  &:hover {\r\n    background: rgb(12, 110, 15);\r\n  }\r\n`;\r\n\r\nexport default function NewPostPage() {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const errorMessage = useSelector(selectErrorMessage);\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const isSubmit = useRef(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isSubmit.current) return;\r\n    isSubmit.current = true;\r\n    dispatch(editPost(title, content, id)).then((res) => {\r\n      isSubmit.current = false;\r\n      if (res) history.push('/');\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(id)).then((post) => {\r\n      setTitle(post[0].title);\r\n      setContent(post[0].body);\r\n    });\r\n    return () => dispatch(setPost(null));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <InputContainer>\r\n        <InputTitle\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n      </InputContainer>\r\n      <InputContainer>\r\n        <InputStory\r\n          rows=\"10\"\r\n          placeholder=\"Tell your story...\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          required\r\n        />\r\n      </InputContainer>\r\n      <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </Form>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUser, setIsLodingUser, selectUser } from '../../redux/blogSlice';\r\nimport { getAuthToken } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport Header from '../Header';\r\nimport LoginPage from '../../pages/LoginPage';\r\nimport SignUpPage from '../../pages/SignUpPage';\r\nimport HomePage from '../../pages/HomePage';\r\nimport PostPage from '../../pages/PostPage';\r\nimport NewPostPage from '../../pages/NewPostPage';\r\nimport AboutPage from '../../pages/AboutPage';\r\nimport EditPostPage from '../../pages/EditPostPage';\r\n\r\nconst Root = styled.div`\r\n  padding-top: 64px;\r\n`;\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (getAuthToken()) {\r\n      dispatch(getUser());\r\n      dispatch(setIsLodingUser(true));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Root>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/post/:id\">\r\n            <PostPage />\r\n          </Route>\r\n          <Route path=\"/new-post\">{user && <NewPostPage />}</Route>\r\n          <Route path=\"/edit/:id\">{user && <EditPostPage />}</Route>\r\n          <Route path=\"/about\">\r\n            <AboutPage />\r\n          </Route>\r\n          <Route path=\"/sign-up\">\r\n            <SignUpPage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Root>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport blogReducer from '../redux/blogSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    blog: blogReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}